name: Release

on: push

permissions:
  contents: write

env:
  GOPROXY: direct
  GITHUB_TOKEN: ${{ github.token }}

jobs:
  tests:
    runs-on: ubuntu-latest
    outputs:
      status: ${{ join(steps.*.conclusion) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"
      - name: Install Dependencies
        run: |
          go version
          go install honnef.co/go/tools/cmd/staticcheck@latest
          go install github.com/fzipp/gocyclo/cmd/gocyclo@latest
      - name: Test
        run: |
          go test -v -coverprofile=coverage.out ./...
          go tool cover -func=coverage.out
      - name: CodeCov
        run: bash <(curl -s https://codecov.io/bash)
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      - name: Build
        run: go build
      - name: Vet
        run: go vet -v
      # -
      # name: staticcheck
      # run: staticcheck -f stylish -checks all  ./...
      - name: gocyclo
        run: gocyclo .

  build:
    needs: tests
    if: ${{!contains(needs.tests.check.outputs.status, 'failure')}}
    runs-on: ubuntu-latest
    outputs:
      status: ${{ join(steps.*.conclusion) }}
    env:
      GITHUB_TOKEN: ${{ github.token }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"
          check-latest: true
      - run: go version
      - name: GoReleaser Action
        uses: goreleaser/goreleaser-action@v6.1.0
        with:
          version: ~> v2
          args: release --clean ${{ startsWith(github.ref, 'refs/tags/') && '' || '--snapshot' }}
      - name: Upload assets
        uses: actions/upload-artifact@v4
        with:
          name: sbomber
          path: dist/*
  publish:
    runs-on: ubuntu-latest
    needs: build
    if: ${{!contains(needs.build.check.outputs.status, 'failure') && startsWith(github.ref, 'refs/tags/')}}
    steps:
      - name: Publish release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
          # token: ${{ secrets.PUBLISHER_TOKEN }}
